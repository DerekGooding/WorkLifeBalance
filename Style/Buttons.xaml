<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
            <Style x:Key="RoundedToggleBtnStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="white"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource WLFBLighterPurple}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <ControlTemplate x:Key="RoundedToggleBtnTemp" TargetType="ToggleButton">
            <Border CornerRadius="10"
                    Background="{TemplateBinding Background}">

                <ContentPresenter HorizontalAlignment="Center" 
                                  VerticalAlignment="Center">
                </ContentPresenter>

            </Border>
        </ControlTemplate>

        <Style x:Key="CornerToggleBtnStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="WhiteSmoke"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Panel.ZIndex" Value="2"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource WLFBLighterPurple}"/> 
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="CornerToggleBtnTemp" TargetType="ToggleButton">
            <Border Background="{TemplateBinding Background}"
                    Margin="1"
                    CornerRadius="5">

                <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                </ContentPresenter>

            </Border>
        </ControlTemplate>
        
        

        <ControlTemplate x:Key="RoundedBtnTemp" TargetType="Button">
            <Border CornerRadius="50"
                    Background="{TemplateBinding Background}">
                
                <ContentPresenter HorizontalAlignment="Center" 
                                  VerticalAlignment="Center">
                </ContentPresenter>
                
            </Border>
        </ControlTemplate>

        <Style x:Key="RoundedBtnHoverStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource WLFBLigherBlue}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource WLFBLightBlue}"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LightblueRoundedBtnHoverStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource WLFBBrightOceanBlue}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource WLFBLightBlue}"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RedRoundedBtnHoverStyle" TargetType="Button">
            <Setter Property="Background" Value="Tomato"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="OrangeRed"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OceanBlueRoundedBtnStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource WLFBBrightOceanBlue}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="RoundedBtnStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource WLFBLigherBlue}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="SlightRoundedBtnTemp" TargetType="Button">
            <Border CornerRadius="15"
                    Background="{TemplateBinding Background}">

                <ContentPresenter HorizontalAlignment="Center" 
                                  VerticalAlignment="Center">
                </ContentPresenter>

            </Border>
        </ControlTemplate>

        <Style x:Key="BlueRoundedBtnHoverStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource WLFBOceanBlue}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Combo Box button -->
        <ControlTemplate x:Key="CustomComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        CornerRadius="8"
                        Background="{StaticResource WLFBOceanBlue}"
                        BorderBrush="{StaticResource WLFBLighterPurple}"
                        BorderThickness="1" />
                <Border Grid.Column="0"
                        CornerRadius="8" 
                        Margin="1" 
                        Background="{StaticResource WLFBBrightOceanBlue}"
                        BorderBrush="{StaticResource WLFBLighterPurple}"
                        BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      Fill="White"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
            </Grid>
        </ControlTemplate>

        <!-- ComboBoxTextBox ControlTemplate -->
        <ControlTemplate x:Key="CustomComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <!-- ComboBox Style -->
        <Style x:Key="CustomComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                                    Name="ToggleButton" 
                                    Template="{StaticResource CustomComboBoxToggleButton}" 
                                    Grid.Column="2" 
                                    Focusable="false"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    ClickMode="Press"/>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    Margin="7,3,23,3"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource CustomComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     FontSize="5"
                                     Background="{StaticResource WLFBBrightOceanBlue}"
                                     Foreground="{StaticResource WLFBBluishWhite}"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup  Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True" 
                                    Focusable="False"
                                    PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"                
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" 
                                            Background="{StaticResource WLFBOceanBlue}"
                                            BorderThickness="1"
                                            CornerRadius="10"
                                            BorderBrush="{StaticResource WLFBBrightOceanBlue}"/>
                                    <ScrollViewer Margin="4,6,4,6" MaxHeight="100" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource WLFBBrightOceanBlue}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBoxItem Style -->
        <Style x:Key="CustomComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border" Padding="2" CornerRadius="8" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource WLFBBrightOceanBlue}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource WLFBOceanBlue}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
</ResourceDictionary>